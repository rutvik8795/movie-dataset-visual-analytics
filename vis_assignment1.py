# -*- coding: utf-8 -*-
"""Vis_Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J5p1L24xUrLNnJAXBWQT06xwR5jJDNMf
"""

import pandas as pd

standings = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-04/standings.csv')

movies = pd.read_csv('/content/drive/My Drive/Spring2020/Visualization/Assignment1/Datasets/moviemetadata-imdb-5000-movie-dataset-QueryResult.csv')

# Processing done to obtain the frequency for the categorical variables

# The list of the categorical variables is:
# 1) Title Year of the movie
# 2) Language of the movie
# 3) Country in which the movie was made
# 4) Content rating of the movie
# 5) Genre of the movie


# Processing for: Title Year of the movie

titleYear_valuecounts = movies['title_year'].value_counts().rename_axis('year').to_frame('counts')
titleYear_valuecounts = titleYear_valuecounts.sort_values(by=['year'], ascending=False)

titleYear_valuecounts = titleYear_valuecounts.drop(titleYear_valuecounts.index[10:])

titleYear_valuecounts = titleYear_valuecounts.sort_values(by=['year'])
display(titleYear_valuecounts)


titleYear_valuecounts.to_csv(r'title_year.csv')

# Processing for:  Language of the movie

language_valuecounts = movies['language'].value_counts().rename_axis('language').to_frame('counts')
language_valuecounts = language_valuecounts.drop(language_valuecounts.index[15:]).sample(frac=1)
display(language_valuecounts)


language_valuecounts.to_csv(r'language.csv')

# Processing for:  Country of the movie

country_valuecounts = movies['country'].value_counts().rename_axis('country').to_frame('counts')
#titleYear_valuecounts = titleYear_valuecounts.sort_values(by=['year'], ascending=False)

country_valuecounts = country_valuecounts.drop(country_valuecounts.index[10:]).sample(frac=1)

#titleYear_valuecounts = titleYear_valuecounts.sort_values(by=['year'])
display(country_valuecounts)


country_valuecounts.to_csv(r'country.csv')

# Processing for: Content Rating of the movie

content_valuecounts = movies['content_rating'].value_counts().rename_axis('content_rating').to_frame('counts')
content_valuecounts = content_valuecounts.sample(frac=1)
display(content_valuecounts)


content_valuecounts.to_csv(r'content_rating.csv')

# Processing for: Genre of the movie

movies['genres']

split_genres = movies['genres'].str.split('|')


#display(split_genres)

genre_data = split_genres.to_list()

primary_genre = []
display(len(genre_data))


for i in range(len(genre_data)):
  primary_genre.append(genre_data[i][0])

#display(primary_genre)

genre_df = pd.DataFrame(data = primary_genre, columns = ['Genre'])

genre_valuecounts = genre_df['Genre'].value_counts().rename_axis('genre').to_frame('counts')

genre_valuecounts = genre_valuecounts.drop(genre_valuecounts.index[15:])

genre_valuecounts = genre_valuecounts.sample(frac=1)
display(genre_valuecounts)


genre_valuecounts.to_csv(r'genre.csv')
#display(genre_df.head())
'''
names = ["Capital", "State"]
new_df = pd.DataFrame(genre_data[0], columns=names)

'''